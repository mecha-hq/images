name: Build Image(s)
description: Build an OCI image for a given image on a given arch. Optionally publishes it on GitHub.
inputs:
  container_registry_password:
    description: "The password for the Container registry."
    required: true
  melange_signing_key:
    description: "The signing key for Melange."
    required: true
  mise_version:
    description: "The version of mise to install."
    default: "2025.4.0"
    required: false
  image_arch:
    description: "The arch to build the image for. default is amd64,arm64."
    default: "amd64,arm64"
    required: false
  image_name:
    description: "The name of the image to build."
    required: true
  publish:
    description: "Whether to publish the built artifacts(images, manifests, gh-pages, etc). default is false."
    default: "false"
    required: false
runs:
  using: "composite"
  steps:
    # Validate the inputs

    - name: validate inputs.image_name
      shell: sh
      run: make validate-name IMAGE=${{ inputs.image_name }}

    - name: validate inputs.image_arch
      shell: sh
      run: make validate-arch ARCH=${{ inputs.image_arch }}

    # Prepare the environment

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        version: ${{ inputs.mise_version }}

    - name: Activate mise
      shell: sh
      run: echo 'eval "$(~/.local/share/mise/bin/mise activate bash)"' >> ~/.bashrc

    - name: Dump the signing key
      shell: sh
      run: if [ ! -f "melange.rsa" ]; then echo "${{ inputs.melange_signing_key }}" > melange.rsa; fi

    - name: Determine image version
      shell: sh
      run: echo IMAGE_VERSION=$(scripts/image-version.sh ${{ inputs.image_name }}) >> ${GITHUB_ENV}

    # Prepare and publish the Container Image

    - name: Build APK package
      shell: sh
      run: make melange ARCH=${{ inputs.image_arch }} IMAGE=${{ inputs.image_name }}

    - name: Create OCI Image
      shell: sh
      run: make apko ARCH=${{ inputs.image_arch }} IMAGE=${{ inputs.image_name }}

    - name: Load OCI images
      shell: sh
      run: make docker-load IMAGE=${{ inputs.image_name }} VERSION="${{ env.IMAGE_VERSION }}"

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: mecha-hq
        password: ${{ inputs.container_registry_password }}

    - name: Push OCI images to the registry
      shell: sh
      run: make docker-push ARCH=${{ inputs.image_arch }} IMAGE=${{ inputs.image_name }} VERSION="${{ env.IMAGE_VERSION }}"
      if: ${{ inputs.publish == 'true' }}

    # Cleanup the environment

    - name: Remove the signing key
      shell: sh
      run: shred -v -z -u -n 5 melange.rsa
      if: always()
