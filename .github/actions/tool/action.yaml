name: Build and Scan Tool
description: Build an OCI image for a given tool on a given arch and scan it, producing reports. Optionally publish both the image and the reports on GitHub.
inputs:
  name:
    description: "The name of the tool or collection to build."
    required: true
  arch:
    description: "The arch to build the tool or collection for. default is amd64,arm64."
    default: "amd64,arm64"
    required: false
  publish:
    description: "Whether to publish the container images and manifests. default is false."
    default: "false"
    required: false
  container_registry_password:
    description: "The password for the Container Registry."
    required: true
runs:
  using: "composite"
  steps:
    - name: validate inputs.name
      shell: sh
      run: make validate-name IMAGE=${{ inputs.name }}

    - name: validate inputs.arch
      shell: sh
      run: make validate-arch ARCH=${{ inputs.arch }}

    - name: Determine image version
      shell: sh
      run: echo IMAGE_VERSION=$(make image-version IMAGE=${{ inputs.name }}) >> ${GITHUB_ENV}

    - name: Determine image kind
      shell: sh
      run: echo IMAGE_KIND=$(make image-kind IMAGE=${{ inputs.name }}) >> ${GITHUB_ENV}

    - name: Build APK package
      shell: sh
      run: make melange ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }}

    - name: Create OCI Image
      shell: sh
      run: make apko ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }}

    - name: Load OCI images
      shell: sh
      run: make docker-load IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"

    - name: Scan OCI images with Dockle
      shell: sh
      run: make dockle ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"

    - name: Scan OCI images with Grype
      shell: sh
      run: make grype ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"

    - name: Render the Dockle scans
      shell: sh
      run: make render-dockle ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"

    - name: Render the Grype scans
      shell: sh
      run: make render-grype ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.container_registry_password }}
      if: ${{ inputs.publish == 'true' }}

    - name: Upload OCI images
      shell: sh
      run: make docker-push ARCH=${{ inputs.arch }} IMAGE=${{ inputs.name }} VERSION="${IMAGE_VERSION}"
      if: ${{ inputs.publish == 'true' }}

    - name: Upload reports artifact
      uses: actions/upload-artifact@v4
      with:
        path: ${IMAGE_KIND}/${{ inputs.name }}/reports/${IMAGE_VERSION}
      if: ${{ inputs.publish == 'true' }}

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: ${{ inputs.publish == 'true' }}

    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${IMAGE_KIND}/${{ inputs.name }}/renders/${IMAGE_VERSION}
      if: ${{ inputs.publish == 'true' }}

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      if: ${{ inputs.publish == 'true' }}
