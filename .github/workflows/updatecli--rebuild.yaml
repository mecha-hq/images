# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Updatecli Rebuild
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
env:
  REBUILD_TOOL: checkmake
jobs:
  rebuild:
    if: ${{ startsWith(github.head_ref, 'updatecli_main_') && ( contains(github.event.pull_request.title, 'melange') || contains(github.event.pull_request.title, 'apko') ) }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: Determine image version
        shell: sh
        run: echo IMAGE_VERSION=$(scripts/image-version.sh ${{ env.REBUILD_TOOL }}) >> ${GITHUB_ENV}
      - name: Build image
        uses: ./.github/actions/image
        with:
          container_registry_password: ${{ secrets.CI_TOKEN }}
          melange_signing_key: ${{ secrets.MELANGE_SIGNING_KEY }}
          image_name: ${{ env.REBUILD_TOOL }}
          publish: "false"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Scan image
        uses: ./.github/actions/scans
        with:
          container_registry_password: ${{ secrets.CI_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          snyk_org: ${{ secrets.SNYK_ORG }}
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          image_name: ${{ env.REBUILD_TOOL }}
          publish: "false"
          pull_images: "false"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate pages
        uses: ./.github/actions/pages
        with:
          publish: "false"
          content_subject: ${{ env.REBUILD_TOOL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_TOKEN: ${{ secrets.CI_TOKEN }}
  rescan:
    if: ${{ startsWith(github.head_ref, 'updatecli_main_') && ( contains(github.event.pull_request.title, 'dockle') || contains(github.event.pull_request.title, 'grype') || contains(github.event.pull_request.title, 'snyk') || contains(github.event.pull_request.title, 'trivy') ) }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: Determine image version
        shell: sh
        run: echo IMAGE_VERSION=$(scripts/image-version.sh ${{ env.REBUILD_TOOL }}) >> ${GITHUB_ENV}
      - name: Scan image
        uses: ./.github/actions/scans
        with:
          container_registry_password: ${{ secrets.CI_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          snyk_org: ${{ secrets.SNYK_ORG }}
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          image_name: ${{ env.REBUILD_TOOL }}
          publish: "false"
          pull_images: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate pages
        uses: ./.github/actions/pages
        with:
          publish: "false"
          content_subject: ${{ env.REBUILD_TOOL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_TOKEN: ${{ secrets.CI_TOKEN }}
  regen_pages:
    if: ${{ startsWith(github.head_ref, 'updatecli_main_') && ( contains(github.event.pull_request.title, 'hugo') ) }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: Generate pages
        uses: ./.github/actions/pages
        with:
          publish: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
          content_subject: the static site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_TOKEN: ${{ secrets.CI_TOKEN }}
